








WITH staging AS (
-- Generated by dbtvault.



WITH source_data AS (

    SELECT

    boardid,
    secid,
    tradedate,
    shortname,
    name,
    close,
    open,
    high,
    low,
    value,
    duration,
    yield,
    decimals,
    capitalization,
    currencyid,
    divisor,
    tradingsession,
    volume

    FROM "postgres"."public"."source_wheat_msk"
),

derived_columns AS (

    SELECT

    boardid,
    secid,
    tradedate,
    shortname,
    name,
    close,
    open,
    high,
    low,
    value,
    duration,
    yield,
    decimals,
    capitalization,
    currencyid,
    divisor,
    tradingsession,
    volume,
    TRADEDATE::TEXT AS DATE_KEY,
    'CSV_WHEAT_MSK'::TEXT AS RECORD_SOURCE

    FROM source_data
),

hashed_columns AS (

    SELECT

    boardid,
    secid,
    tradedate,
    shortname,
    name,
    close,
    open,
    high,
    low,
    value,
    duration,
    yield,
    decimals,
    capitalization,
    currencyid,
    divisor,
    tradingsession,
    volume,
    DATE_KEY,
    RECORD_SOURCE,

    CAST((MD5(NULLIF(UPPER(TRIM(CAST(TRADEDATE AS VARCHAR))), ''))) AS TEXT) AS DATE_PK,
    CAST(MD5(CONCAT_WS('||',
        COALESCE(NULLIF(UPPER(TRIM(CAST(CLOSE AS VARCHAR))), ''), '^^'),
        COALESCE(NULLIF(UPPER(TRIM(CAST(HIGH AS VARCHAR))), ''), '^^'),
        COALESCE(NULLIF(UPPER(TRIM(CAST(LOW AS VARCHAR))), ''), '^^'),
        COALESCE(NULLIF(UPPER(TRIM(CAST(NAME AS VARCHAR))), ''), '^^'),
        COALESCE(NULLIF(UPPER(TRIM(CAST(OPEN AS VARCHAR))), ''), '^^'),
        COALESCE(NULLIF(UPPER(TRIM(CAST(VALUE AS VARCHAR))), ''), '^^'),
        COALESCE(NULLIF(UPPER(TRIM(CAST(VOLUME AS VARCHAR))), ''), '^^')
    )) AS TEXT) AS DATE_HASHDIFF

    FROM derived_columns
),

columns_to_select AS (

    SELECT

    boardid,
    secid,
    tradedate,
    shortname,
    name,
    close,
    open,
    high,
    low,
    value,
    duration,
    yield,
    decimals,
    capitalization,
    currencyid,
    divisor,
    tradingsession,
    volume,
    DATE_KEY,
    RECORD_SOURCE,
    DATE_PK,
    DATE_HASHDIFF

    FROM hashed_columns
)

SELECT * FROM columns_to_select
)

SELECT *, 
       current_timestamp AS LOAD_DATE,
       current_timestamp AS EFFECTIVE_FROM
FROM staging